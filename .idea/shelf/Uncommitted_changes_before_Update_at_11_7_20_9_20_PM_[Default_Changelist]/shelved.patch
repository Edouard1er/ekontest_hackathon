Index: app/src/main/java/com/example/ekontest_hackathon/SettingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ekontest_hackathon;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.view.View;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.example.ekontest_hackathon.ui.NavDrawerActivity;\n\npublic class SettingActivity extends AppCompatActivity {\n    TextView language, termUse, userDataPolicy, copyright, privacy;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_setting);\n        language = findViewById(R.id.id_langue_setting);\n        termUse = findViewById(R.id.id_conditionUtilisation_setting);\n        userDataPolicy =findViewById(R.id.id_politique_setting);\n        copyright = findViewById(R.id.id_copyright_setting);\n        privacy = findViewById(R.id.id_confidentialite_setting);\n        language.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(SettingActivity.this, LanguageSettingActivity.class);\n                startActivity(intent);\n                finish();\n            }\n        });\n        termUse.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Toast.makeText(getBaseContext(),termUse.getText(), Toast.LENGTH_LONG).show();\n            }\n        });\n        copyright.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Toast.makeText(getBaseContext(),copyright.getText(), Toast.LENGTH_LONG).show();\n            }\n        });\n        privacy.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Toast.makeText(getBaseContext(),privacy.getText(), Toast.LENGTH_LONG).show();\n            }\n        });\n        userDataPolicy.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Toast.makeText(getBaseContext(),userDataPolicy.getText(), Toast.LENGTH_LONG).show();\n            }\n        });\n    }\n    @Override\n    public void onBackPressed() {\n        Intent intent = new Intent(this, NavDrawerActivity.class);\n        startActivity(intent);\n        finish();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ekontest_hackathon/SettingActivity.java	(revision cb0b50bffbc7d47714d5e70fbbfaf19eac67ec6d)
+++ app/src/main/java/com/example/ekontest_hackathon/SettingActivity.java	(date 1604801475000)
@@ -1,8 +1,14 @@
 package com.example.ekontest_hackathon;
 
+import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.app.AppCompatActivity;
 
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.SharedPreferences;
+import android.content.res.Configuration;
 import android.os.Bundle;
 import android.os.Handler;
 import android.view.View;
@@ -11,25 +17,29 @@
 
 import com.example.ekontest_hackathon.ui.NavDrawerActivity;
 
+import java.util.Locale;
+
+import static com.example.ekontest_hackathon.R.string.app_name;
+
 public class SettingActivity extends AppCompatActivity {
     TextView language, termUse, userDataPolicy, copyright, privacy;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        loadLocale();
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_setting);
+
+       // ActionBar actionBar = getSupportActionBar();
+       // actionBar.setTitle(getResources().getString(app_name));
+
         language = findViewById(R.id.id_langue_setting);
         termUse = findViewById(R.id.id_conditionUtilisation_setting);
         userDataPolicy =findViewById(R.id.id_politique_setting);
         copyright = findViewById(R.id.id_copyright_setting);
         privacy = findViewById(R.id.id_confidentialite_setting);
-        language.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(SettingActivity.this, LanguageSettingActivity.class);
-                startActivity(intent);
-                finish();
-            }
-        });
+
+
+
         termUse.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -54,6 +64,18 @@
                 Toast.makeText(getBaseContext(),userDataPolicy.getText(), Toast.LENGTH_LONG).show();
             }
         });
+
+        // change language listener
+
+        language.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showChangelanguageDialog();
+            }
+        });
+
+
+
     }
     @Override
     public void onBackPressed() {
@@ -61,4 +83,54 @@
         startActivity(intent);
         finish();
     }
+
+
+    private void showChangelanguageDialog(){
+
+        final String[] listItems = {"French","English","Creole"};
+        final AlertDialog.Builder nBuilder = new AlertDialog.Builder(SettingActivity.this);
+        nBuilder.setTitle("Choose language");
+        nBuilder.setSingleChoiceItems(listItems, -1, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int i) {
+
+                if(i==0){
+                    setLocate("fr");
+                    recreate();
+
+                }
+                else if(i==1){
+                    setLocate("en");
+                    recreate();
+                }
+                else if(i==2){
+                    setLocate("crp");
+                    recreate();
+                }
+
+                dialog.dismiss();
+            }
+        });
+        AlertDialog nDialog = nBuilder.create();
+        nDialog.show();
+    }
+
+    private void setLocate(String lang) {
+        Configuration config = getBaseContext().getResources().getConfiguration();
+        if (!"".equals(lang) && !config.locale.getLanguage().equals(lang)) {
+
+            Locale locale = new Locale(lang);
+            Locale.setDefault(locale);
+            Configuration conf = new Configuration(config);
+            conf.locale = locale;
+            getBaseContext().getResources().updateConfiguration(conf, getBaseContext().getResources().getDisplayMetrics());
+        }
+    }
+
+
+    public  void loadLocale(){
+        SharedPreferences prefs = getSharedPreferences("setting", Activity.MODE_PRIVATE);
+        String language = prefs.getString("My_lang","");
+        setLocate(language);
+    }
 }
\ No newline at end of file
Index: app/src/main/res/values-b+crp/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-b+crp/strings.xml	(date 1604799159000)
+++ app/src/main/res/values-b+crp/strings.xml	(date 1604799159000)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="app_name">Pw√≤fPam</string>
+</resources>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1604791150000)
+++ .idea/compiler.xml	(date 1604791150000)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"1.8\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision cb0b50bffbc7d47714d5e70fbbfaf19eac67ec6d)
+++ .idea/gradle.xml	(date 1604791150000)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/src/main/res/values-crp/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-crp/strings.xml	(date 1604801900000)
+++ app/src/main/res/values-crp/strings.xml	(date 1604801900000)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="open">ouvri</string>
+    <string name="close">femen</string>
+    <string name="strProfile">pwofil</string>
+    <string name="sendComment">voye komante</string>
+    <string name="AvisFreelancer">jounal Freelancer</string>
+    <string name="strAccount">Kont</string>
+    <string name="strAbout">apwopo</string>
+    <string name="strCreateInvoice">"kreye yon "</string>
+    <string name="strAllReview">tout jounal yo</string>
+    <string name="strMessage">Mesaj</string>
+    <string name="strFavorite">Favori</string>
+    <string name="strFreelancerInfo">Enfomasyon sou freelancer</string>
+    <string name="strHelp">ed ak komante</string>
+    <string name="strPictureUpload">telechaje imaj</string>
+    <string name="strPaymentMethod">metod peman</string>
+    <string name="strPersonnalInfo">enfomasyon pesonel</string>
+    <string name="strEditAccount">Modifye kont ou</string>
+    <string name="strSetting">pameramet</string>
+    <string name="strUploadPaidDoc">Telechaje doukimant ou peye</string>
+    <string name="strUploadFreeDoc">telechaje dokiman gratis</string>
+    <string name="strProfilePicture">foto pwofil</string>
+    <string name="strTopFreelancer">Top freelancer</string>
+    <string name="strAcademicInfo">Enfomasyon akademik</string>
+    <string name="strSearchFreelancer">cheche freelancer</string>
+    <string name="strLanguage">Lang</string>
+    <string name="strTermsOfUse">kondisyon itilizasyon</string>
+    <string name="strCopyright">dwa dote</string>
+    <string name="StrUserDataPolicy">Itilizate done politik</string>
+    <string name="hello_blank_fragment">hello blank fragment</string>
+    <string name="privacySettings">anviwonman vi prive</string>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values-fr/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-fr/strings.xml	(date 1604801990000)
+++ app/src/main/res/values-fr/strings.xml	(date 1604801990000)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="app_name">Pw√≤fPam</string>
+    <string name="open">ouvrir</string>
+    <string name="close">Fermer</string>
+    <string name="strProfile">profile</string>
+    <string name="sendComment">"Envoyer des commentare "</string>
+    <string name="strAccount">compte</string>
+    <string name="AvisFreelancer">journal du freelaancer</string>
+    <string name="strAbout">a propos</string>
+    <string name="strMessage">message</string>
+    <string name="strFavorite">favorie</string>
+    <string name="strFreelancerInfo">information sur le freelancer</string>
+    <string name="strHelp">aide et commentaire</string>
+    <string name="strPictureUpload">telecharger une photo</string>
+    <string name="strPaymentMethod">methode de paiement</string>
+    <string name="strPersonnalInfo">personnel information</string>
+    <string name="strEditAccount">Modifier votre compte</string>
+    <string name="strSetting">paramettre</string>
+    <string name="strUploadPaidDoc">telecharger</string>
+    <string name="strUploadFreeDoc">Telechager  document libre</string>
+    <string name="strProfilePicture">photo de profile</string>
+    <string name="strTopFreelancer">Top  Freelancer</string>
+    <string name="strAcademicInfo">information academique</string>
+    <string name="strSearchFreelancer">chercher des Freelancer</string>
+    <string name="privacySettings">Paramettre de confidentialite</string>
+    <string name="strLanguage">Langue</string>
+    <string name="strTermsOfUse">Terme d\'utilisation</string>
+    <string name="strCopyright">tout droit etre reserve</string>
+    <string name="strCreateInvoice">creer un compte</string>
+    <string name="strAllReview">tous les journales</string>
+    <string name="hello_blank_fragment">hello blank fragment</string>
+    <string name="StrUserDataPolicy">politique de donnee d\'utilisation</string>
+</resources>
\ No newline at end of file
